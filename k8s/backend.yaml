apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend
  namespace: subtracker
  labels:
    app: backend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      labels:
        app: backend
    spec:
      containers:
      - name: backend
        image: subtracker-backend:latest
        ports:
        - containerPort: 8080
        env:
        # Configuration from ConfigMap
        - name: DATABASE_DRIVER
          valueFrom:
            configMapKeyRef:
              name: subtracker-config
              key: DATABASE_DRIVER
        - name: DATABASE_URL
          valueFrom:
            configMapKeyRef:
              name: subtracker-config
              key: DATABASE_URL
        - name: JWT_ISSUER
          valueFrom:
            configMapKeyRef:
              name: subtracker-config
              key: JWT_ISSUER
        - name: JWT_AUDIENCE
          valueFrom:
            configMapKeyRef:
              name: subtracker-config
              key: JWT_AUDIENCE
        - name: JWT_REALM
          valueFrom:
            configMapKeyRef:
              name: subtracker-config
              key: JWT_REALM
        # Secrets from Secret
        - name: DATABASE_USER
          valueFrom:
            secretKeyRef:
              name: subtracker-secrets
              key: DATABASE_USER
        - name: DATABASE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: subtracker-secrets
              key: DATABASE_PASSWORD
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: subtracker-secrets
              key: JWT_SECRET
        readinessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 60
          periodSeconds: 30
---
apiVersion: v1
kind: Service
metadata:
  name: backend
  namespace: subtracker
  labels:
    app: backend
spec:
  selector:
    app: backend
  ports:
  - protocol: TCP
    port: 8080
    targetPort: 8080
  type: ClusterIP